{"version":3,"sources":["meteor://ðŸ’»app/client/accounts/AccountSettings.js","meteor://ðŸ’»app/client/layouts/HomeLayout.js","meteor://ðŸ’»app/client/rings/BrowseRings.js","meteor://ðŸ’»app/client/rings/NewRing.js","meteor://ðŸ’»app/client/rings/RingInfo.js","meteor://ðŸ’»app/client/rings/RingSingle.js","meteor://ðŸ’»app/client/rings/Rings.js","meteor://ðŸ’»app/lib/routes.js","meteor://ðŸ’»app/collections/Rings.js","meteor://ðŸ’»app/collections/Users.js"],"names":["Template","AccountSettings","events","event","preventDefault","console","log","oldPass","target","oldPassword","value","newPass","newPassword","newPass2","newPassword2","Accounts","changePassword","error","reason","newUsername","changeUsername","Meteor","userID","helpers","user","Session","set","HomeLayout","BrowseRings","onCreated","self","autorun","subscribe","rings","Rings","find","NewRing","RingInfo","editMode","ReactiveVar","call","_id","isPrivate","template","get","updateRingId","instance","RingSingle","id","FlowRouter","getParam","ring","findOne","isClient","onLogin","go","onLogout","triggers","enter","context","redirect","userId","route","name","action","BlazeLayout","render","main","Mongo","Collection","allow","insert","doc","update","Tags","SimpleSchema","type","String","RingSchema","label","desc","tags","Boolean","defaultValue","optional","autoform","createdBy","autoValue","createdAt","Date","methods","togglePrivate","currentState","$set","togglePublic","deleteRing","remove","attachSchema","User","username","emails","Array","Object","regEx","RegEx","Email","services","blackbox","users"],"mappings":"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","file":"/app.js","sourcesContent":["Template.AccountSettings.events({\r\n    'click .changePassword': function(event){\r\n        event.preventDefault();\r\n        console.log(event);\r\n        var oldPass = event.target.oldPassword.value;\r\n        var newPass = event.target.newPassword.value;\r\n        var newPass2 = event.target.newPassword2.value;\r\n        Accounts.changePassword(oldPass, newPass, function(error){\r\n          if (error) {\r\n            console.log(\"ERROR\" + error.reason);\r\n          }\r\n          else{\r\n            console.log(\"Password Changed\");\r\n          }\r\n        });\r\n    },\r\n    'click .changeUsername': function(event){\r\n      event.preventDefault();\r\n      var newUsername = event.target.changeUsername.value;\r\n      Accounts.changeUsername(Meteor.userID(), newUsername);\r\n    }\r\n});\r\n\r\nTemplate.AccountSettings.helpers({\r\n  user: function() {\r\n    return Meteor.user();\r\n  }\r\n});\r\n\r\nTemplate.AccountSettings.events({\r\n    'click .fa-close': function() {\r\n        Session.set('changeSettings', false);\r\n    }\r\n});\r\n\r\nTemplate.AccountSettings.events({\r\n    'click .change-settings': () => {\r\n        Session.set('changeSettings', true);\r\n    }\r\n})","Template.HomeLayout.events({\r\n    'click .register': function() {\r\n        Session.set('register', true);\r\n    }\r\n});","Template.BrowseRings.onCreated(function(){\r\n    var self = this;\r\n    self.autorun(function (){\r\n        self.subscribe('rings');\r\n    });\r\n});\r\n\r\nTemplate.BrowseRings.helpers({\r\n    rings: ()=> {\r\n        return Rings.find({});\r\n    }\r\n});","Template.NewRing.events({\r\n    'click .fa-close': function() {\r\n        Session.set('newRing', false);\r\n    }\r\n});","Template.RingInfo.onCreated(function(){\r\n    this.editMode = new ReactiveVar(false);\r\n});\r\n\r\n\r\nTemplate.RingInfo.events({\r\n    'click .set-private': function() {\r\n        Meteor.call('togglePrivate', this._id, this.isPrivate);\r\n    },\r\n    'click .set-public': function() {\r\n        Meteor.call('togglePublic', this._id, this.isPrivate);\r\n    },\r\n    'click .fa-trash': function() {\r\n        Meteor.call('deleteRing', this._id);\r\n    },\r\n    'click .fa-pencil': function(event, template) {\r\n        template.editMode.set(!template.editMode.get());\r\n    }\r\n});\r\n\r\nTemplate.RingInfo.helpers({\r\n    updateRingId: function() {\r\n        return this._id;\r\n    },\r\n    editMode: function() {\r\n        return Template.instance().editMode.get();\r\n    }\r\n});","Template.RingSingle.onCreated(function(){\r\n    var self = this;\r\n    self.autorun(function (){\r\n        var id = FlowRouter.getParam('id');\r\n        self.subscribe('singleRing', id);\r\n    });\r\n});\r\n\r\nTemplate.RingSingle.helpers({\r\n    ring: ()=> {\r\n        var id = FlowRouter.getParam('id');\r\n        return Rings.findOne({_id: id});\r\n    }\r\n});","Template.Rings.events({\r\n    'click .new-ring': () => {\r\n        Session.set('newRing', true);\r\n    }\r\n})","if(Meteor.isClient){\r\n    Accounts.onLogin(function(){\r\n        FlowRouter.go('dashboard');\r\n    });\r\n\r\n    Accounts.onLogout(function(){\r\n        FlowRouter.go('home');\r\n    });\r\n}\r\n\r\nFlowRouter.triggers.enter([function(context, redirect){\r\n    if(!Meteor.userId()){\r\n        FlowRouter.go('home');\r\n    }\r\n}]);\r\n\r\nFlowRouter.route('/', {\r\n    name: 'home',\r\n    action() {\r\n        if(Meteor.userId()){\r\n            FlowRouter.go('dashboard');\r\n        }\r\n        BlazeLayout.render('HomeLayout');\r\n    }\r\n});\r\n\r\nFlowRouter.route('/dashboard', {\r\n    name: 'dashboard',\r\n    action() {\r\n        BlazeLayout.render('MainLayout', {main:'Dashboard'});\r\n    }\r\n});\r\n\r\n\r\nFlowRouter.route('/rings', {\r\n    name: 'rings',\r\n    action() {\r\n        BlazeLayout.render('MainLayout', {main:'Rings'});\r\n    }\r\n});\r\n\r\nFlowRouter.route('/browse-rings', {\r\n    name: 'browse-rings',\r\n    action() {\r\n        BlazeLayout.render('MainLayout', {main:'BrowseRings'});\r\n    }\r\n});\r\n\r\nFlowRouter.route('/rings/:id', {\r\n    name: 'ring-single',\r\n    action() {\r\n        BlazeLayout.render('MainLayout', {main:'RingSingle'});\r\n    }\r\n});\r\n\r\nFlowRouter.route('/account', {\r\n    name: 'account-settings',\r\n    action() {\r\n        BlazeLayout.render('MainLayout', {main:'AccountSettings'});\r\n    }\r\n});\r\n","Rings = new Mongo.Collection('rings');\r\n\r\nRings.allow({\r\n    insert: function(userId, doc){\r\n        return !!userId;\r\n    },\r\n    update: function(userId, doc) {\r\n        return !!userId;\r\n    }\r\n});\r\n\r\nTags = new SimpleSchema({\r\n    name: {\r\n        type: String\r\n    }\r\n});\r\n\r\nRingSchema = new SimpleSchema({\r\n    name: {\r\n        type: String,\r\n        label: \"Name\"\r\n    },\r\n    desc: {\r\n        type: String,\r\n        label: \"Description\"\r\n    },\r\n    tags: {\r\n        type: [Tags]\r\n    },\r\n    isPrivate: {\r\n        type: Boolean,\r\n        defaultValue: false,\r\n        optional: true,\r\n        autoform:{\r\n            type: \"hidden\"\r\n        }\r\n    },\r\n    createdBy:{\r\n        type: String,\r\n        label: \"Created By\",\r\n        autoValue: function () {\r\n            return this.userId\r\n        },\r\n        autoform: {\r\n            type: \"hidden\"\r\n        }\r\n    },\r\n    createdAt: {\r\n        type: Date,\r\n        label: \"Created At\",\r\n        autoValue: function() {\r\n            return new Date()\r\n        },\r\n        autoform: {\r\n            type: \"hidden\"\r\n        }\r\n    }\r\n});\r\n\r\nMeteor.methods({\r\n    togglePrivate: function(id, currentState) {\r\n        Rings.update(id, {\r\n            $set: {\r\n                isPrivate: true\r\n            }\r\n        });\r\n    },\r\n    togglePublic: function(id, currentState) {\r\n        Rings.update(id, {\r\n            $set: {\r\n                isPrivate: false\r\n            }\r\n        });\r\n    },\r\n    deleteRing: function(id) {\r\n        Rings.remove(id);\r\n    }\r\n});\r\n\r\nRings.attachSchema( RingSchema );\r\n\r\n","User = new SimpleSchema({\r\n    username: {\r\n        type: String,\r\n        // For accounts-password, either emails or username is required, but not both. It is OK to make this\r\n        // optional here because the accounts-password package does its own validation.\r\n        // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\r\n        optional: true\r\n    },\r\n    emails: {\r\n        type: Array,\r\n        // For accounts-password, either emails or username is required, but not both. It is OK to make this\r\n        // optional here because the accounts-password package does its own validation.\r\n        // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\r\n        optional: true\r\n    },\r\n    \"emails.$\": {\r\n        type: Object\r\n    },\r\n    \"emails.$.address\": {\r\n        type: String,\r\n        regEx: SimpleSchema.RegEx.Email\r\n    },\r\n    // Make sure this services field is in your schema if you're using any of the accounts packages\r\n    services: {\r\n        type: Object,\r\n        optional: true,\r\n        blackbox: true,\r\n        autoform: {\r\n            type: \"hidden\"\r\n        }\r\n    },\r\n});\r\n\r\nMeteor.users.attachSchema( User );"]}