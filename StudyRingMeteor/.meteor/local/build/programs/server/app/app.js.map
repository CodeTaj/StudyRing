{"version":3,"sources":["meteor://ğŸ’»app/lib/routes.js","meteor://ğŸ’»app/collections/Rings.js","meteor://ğŸ’»app/collections/Users.js","meteor://ğŸ’»app/server/publish.js","meteor://ğŸ’»app/server/main.js"],"names":["Meteor","isClient","Accounts","onLogin","FlowRouter","go","onLogout","triggers","enter","context","redirect","userId","route","name","action","BlazeLayout","render","main","Rings","Mongo","Collection","allow","insert","doc","update","Tags","SimpleSchema","type","String","RingSchema","label","desc","tags","isPrivate","Boolean","defaultValue","optional","autoform","createdBy","autoValue","createdAt","Date","methods","togglePrivate","id","currentState","$set","togglePublic","deleteRing","remove","attachSchema","User","username","emails","Array","Object","regEx","RegEx","Email","services","blackbox","users","publish","find","check","_id","module","import","v","startup"],"mappings":"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","file":"/app.js","sourcesContent":["if(Meteor.isClient){\r\n    Accounts.onLogin(function(){\r\n        FlowRouter.go('dashboard');\r\n    });\r\n\r\n    Accounts.onLogout(function(){\r\n        FlowRouter.go('home');\r\n    });\r\n}\r\n\r\nFlowRouter.triggers.enter([function(context, redirect){\r\n    if(!Meteor.userId()){\r\n        FlowRouter.go('home');\r\n    }\r\n}]);\r\n\r\nFlowRouter.route('/', {\r\n    name: 'home',\r\n    action() {\r\n        if(Meteor.userId()){\r\n            FlowRouter.go('dashboard');\r\n        }\r\n        BlazeLayout.render('HomeLayout');\r\n    }\r\n});\r\n\r\nFlowRouter.route('/dashboard', {\r\n    name: 'dashboard',\r\n    action() {\r\n        BlazeLayout.render('MainLayout', {main:'Dashboard'});\r\n    }\r\n});\r\n\r\n\r\nFlowRouter.route('/rings', {\r\n    name: 'rings',\r\n    action() {\r\n        BlazeLayout.render('MainLayout', {main:'Rings'});\r\n    }\r\n});\r\n\r\nFlowRouter.route('/browse-rings', {\r\n    name: 'browse-rings',\r\n    action() {\r\n        BlazeLayout.render('MainLayout', {main:'BrowseRings'});\r\n    }\r\n});\r\n\r\nFlowRouter.route('/rings/:id', {\r\n    name: 'ring-single',\r\n    action() {\r\n        BlazeLayout.render('MainLayout', {main:'RingSingle'});\r\n    }\r\n});\r\n\r\nFlowRouter.route('/account', {\r\n    name: 'account-settings',\r\n    action() {\r\n        BlazeLayout.render('MainLayout', {main:'AccountSettings'});\r\n    }\r\n});\r\n","Rings = new Mongo.Collection('rings');\r\n\r\nRings.allow({\r\n    insert: function(userId, doc){\r\n        return !!userId;\r\n    },\r\n    update: function(userId, doc) {\r\n        return !!userId;\r\n    }\r\n});\r\n\r\nTags = new SimpleSchema({\r\n    name: {\r\n        type: String\r\n    }\r\n});\r\n\r\nRingSchema = new SimpleSchema({\r\n    name: {\r\n        type: String,\r\n        label: \"Name\"\r\n    },\r\n    desc: {\r\n        type: String,\r\n        label: \"Description\"\r\n    },\r\n    tags: {\r\n        type: [Tags]\r\n    },\r\n    isPrivate: {\r\n        type: Boolean,\r\n        defaultValue: false,\r\n        optional: true,\r\n        autoform:{\r\n            type: \"hidden\"\r\n        }\r\n    },\r\n    createdBy:{\r\n        type: String,\r\n        label: \"Created By\",\r\n        autoValue: function () {\r\n            return this.userId\r\n        },\r\n        autoform: {\r\n            type: \"hidden\"\r\n        }\r\n    },\r\n    createdAt: {\r\n        type: Date,\r\n        label: \"Created At\",\r\n        autoValue: function() {\r\n            return new Date()\r\n        },\r\n        autoform: {\r\n            type: \"hidden\"\r\n        }\r\n    }\r\n});\r\n\r\nMeteor.methods({\r\n    togglePrivate: function(id, currentState) {\r\n        Rings.update(id, {\r\n            $set: {\r\n                isPrivate: true\r\n            }\r\n        });\r\n    },\r\n    togglePublic: function(id, currentState) {\r\n        Rings.update(id, {\r\n            $set: {\r\n                isPrivate: false\r\n            }\r\n        });\r\n    },\r\n    deleteRing: function(id) {\r\n        Rings.remove(id);\r\n    }\r\n});\r\n\r\nRings.attachSchema( RingSchema );\r\n\r\n","User = new SimpleSchema({\r\n    username: {\r\n        type: String,\r\n        // For accounts-password, either emails or username is required, but not both. It is OK to make this\r\n        // optional here because the accounts-password package does its own validation.\r\n        // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\r\n        optional: true\r\n    },\r\n    emails: {\r\n        type: Array,\r\n        // For accounts-password, either emails or username is required, but not both. It is OK to make this\r\n        // optional here because the accounts-password package does its own validation.\r\n        // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\r\n        optional: true\r\n    },\r\n    \"emails.$\": {\r\n        type: Object\r\n    },\r\n    \"emails.$.address\": {\r\n        type: String,\r\n        regEx: SimpleSchema.RegEx.Email\r\n    },\r\n    // Make sure this services field is in your schema if you're using any of the accounts packages\r\n    services: {\r\n        type: Object,\r\n        optional: true,\r\n        blackbox: true,\r\n        autoform: {\r\n            type: \"hidden\"\r\n        }\r\n    },\r\n});\r\n\r\nMeteor.users.attachSchema( User );","Meteor.publish('rings', function(){\r\n    return Rings.find({});\r\n});\r\n\r\nMeteor.publish('singleRing', function(id){\r\n    check(id, String);\r\n    return Rings.find({_id: id});\r\n});","import { Meteor } from 'meteor/meteor';\r\n\r\nMeteor.startup(() => {\r\n  // code to run on server at startup\r\n});\r\n"]}