[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nlodash = Package['erasaur:meteor-lodash'].lodash;\n_ = Package.underscore._;\nSpiderable = Package.spiderable.Spiderable;\nHelpers = Package['raix:handlebar-helpers'].Helpers;\nActiveRoute = Package['zimme:active-route'].ActiveRoute;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"lib\":{\"routes.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// lib/routes.js                                                                                              //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nif (Meteor.isClient) {                                                                                        // 1\n    Accounts.onLogin(function () {                                                                            // 2\n        FlowRouter.go('dashboard');                                                                           // 3\n    });                                                                                                       // 4\n    Accounts.onLogout(function () {                                                                           // 6\n        FlowRouter.go('home');                                                                                // 7\n    });                                                                                                       // 8\n}                                                                                                             // 9\n                                                                                                              //\nFlowRouter.triggers.enter([function (context, redirect) {                                                     // 11\n    if (!Meteor.userId()) {                                                                                   // 12\n        FlowRouter.go('home');                                                                                // 13\n    }                                                                                                         // 14\n}]);                                                                                                          // 15\nFlowRouter.route('/', {                                                                                       // 17\n    name: 'home',                                                                                             // 18\n    action: function () {                                                                                     // 19\n        if (Meteor.userId()) {                                                                                // 20\n            FlowRouter.go('dashboard');                                                                       // 21\n        }                                                                                                     // 22\n                                                                                                              //\n        BlazeLayout.render('HomeLayout');                                                                     // 23\n    }                                                                                                         // 24\n});                                                                                                           // 17\nFlowRouter.route('/dashboard', {                                                                              // 27\n    name: 'dashboard',                                                                                        // 28\n    action: function () {                                                                                     // 29\n        BlazeLayout.render('MainLayout', {                                                                    // 30\n            main: 'Dashboard'                                                                                 // 30\n        });                                                                                                   // 30\n    }                                                                                                         // 31\n});                                                                                                           // 27\nFlowRouter.route('/rings', {                                                                                  // 35\n    name: 'rings',                                                                                            // 36\n    action: function () {                                                                                     // 37\n        BlazeLayout.render('MainLayout', {                                                                    // 38\n            main: 'Rings'                                                                                     // 38\n        });                                                                                                   // 38\n    }                                                                                                         // 39\n});                                                                                                           // 35\nFlowRouter.route('/browse-rings', {                                                                           // 42\n    name: 'browse-rings',                                                                                     // 43\n    action: function () {                                                                                     // 44\n        BlazeLayout.render('MainLayout', {                                                                    // 45\n            main: 'BrowseRings'                                                                               // 45\n        });                                                                                                   // 45\n    }                                                                                                         // 46\n});                                                                                                           // 42\nFlowRouter.route('/rings/:id', {                                                                              // 49\n    name: 'ring-single',                                                                                      // 50\n    action: function () {                                                                                     // 51\n        BlazeLayout.render('MainLayout', {                                                                    // 52\n            main: 'RingSingle'                                                                                // 52\n        });                                                                                                   // 52\n    }                                                                                                         // 53\n});                                                                                                           // 49\nFlowRouter.route('/account', {                                                                                // 56\n    name: 'account-settings',                                                                                 // 57\n    action: function () {                                                                                     // 58\n        BlazeLayout.render('MainLayout', {                                                                    // 59\n            main: 'AccountSettings'                                                                           // 59\n        });                                                                                                   // 59\n    }                                                                                                         // 60\n});                                                                                                           // 56\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"Rings.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// collections/Rings.js                                                                                       //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nRings = new Mongo.Collection('rings');                                                                        // 1\nRings.allow({                                                                                                 // 3\n    insert: function (userId, doc) {                                                                          // 4\n        return !!userId;                                                                                      // 5\n    },                                                                                                        // 6\n    update: function (userId, doc) {                                                                          // 7\n        return !!userId;                                                                                      // 8\n    }                                                                                                         // 9\n});                                                                                                           // 3\nTags = new SimpleSchema({                                                                                     // 12\n    name: {                                                                                                   // 13\n        type: String                                                                                          // 14\n    }                                                                                                         // 13\n});                                                                                                           // 12\nRingSchema = new SimpleSchema({                                                                               // 18\n    name: {                                                                                                   // 19\n        type: String,                                                                                         // 20\n        label: \"Name\"                                                                                         // 21\n    },                                                                                                        // 19\n    desc: {                                                                                                   // 23\n        type: String,                                                                                         // 24\n        label: \"Description\"                                                                                  // 25\n    },                                                                                                        // 23\n    tags: {                                                                                                   // 27\n        type: [Tags]                                                                                          // 28\n    },                                                                                                        // 27\n    isPrivate: {                                                                                              // 30\n        type: Boolean,                                                                                        // 31\n        defaultValue: false,                                                                                  // 32\n        optional: true,                                                                                       // 33\n        autoform: {                                                                                           // 34\n            type: \"hidden\"                                                                                    // 35\n        }                                                                                                     // 34\n    },                                                                                                        // 30\n    createdBy: {                                                                                              // 38\n        type: String,                                                                                         // 39\n        label: \"Created By\",                                                                                  // 40\n        autoValue: function () {                                                                              // 41\n            return this.userId;                                                                               // 42\n        },                                                                                                    // 43\n        autoform: {                                                                                           // 44\n            type: \"hidden\"                                                                                    // 45\n        }                                                                                                     // 44\n    },                                                                                                        // 38\n    createdAt: {                                                                                              // 48\n        type: Date,                                                                                           // 49\n        label: \"Created At\",                                                                                  // 50\n        autoValue: function () {                                                                              // 51\n            return new Date();                                                                                // 52\n        },                                                                                                    // 53\n        autoform: {                                                                                           // 54\n            type: \"hidden\"                                                                                    // 55\n        }                                                                                                     // 54\n    }                                                                                                         // 48\n});                                                                                                           // 18\nMeteor.methods({                                                                                              // 60\n    togglePrivate: function (id, currentState) {                                                              // 61\n        Rings.update(id, {                                                                                    // 62\n            $set: {                                                                                           // 63\n                isPrivate: true                                                                               // 64\n            }                                                                                                 // 63\n        });                                                                                                   // 62\n    },                                                                                                        // 67\n    togglePublic: function (id, currentState) {                                                               // 68\n        Rings.update(id, {                                                                                    // 69\n            $set: {                                                                                           // 70\n                isPrivate: false                                                                              // 71\n            }                                                                                                 // 70\n        });                                                                                                   // 69\n    },                                                                                                        // 74\n    deleteRing: function (id) {                                                                               // 75\n        Rings.remove(id);                                                                                     // 76\n    }                                                                                                         // 77\n});                                                                                                           // 60\nRings.attachSchema(RingSchema);                                                                               // 80\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Users.js\":function(require){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// collections/Users.js                                                                                       //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nUser = new SimpleSchema({                                                                                     // 1\n    username: {                                                                                               // 2\n        type: String,                                                                                         // 3\n        // For accounts-password, either emails or username is required, but not both. It is OK to make this  // 4\n        // optional here because the accounts-password package does its own validation.                       // 5\n        // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n        optional: true                                                                                        // 7\n    },                                                                                                        // 2\n    emails: {                                                                                                 // 9\n        type: Array,                                                                                          // 10\n        // For accounts-password, either emails or username is required, but not both. It is OK to make this  // 11\n        // optional here because the accounts-password package does its own validation.                       // 12\n        // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\n        optional: true                                                                                        // 14\n    },                                                                                                        // 9\n    \"emails.$\": {                                                                                             // 16\n        type: Object                                                                                          // 17\n    },                                                                                                        // 16\n    \"emails.$.address\": {                                                                                     // 19\n        type: String,                                                                                         // 20\n        regEx: SimpleSchema.RegEx.Email                                                                       // 21\n    },                                                                                                        // 19\n    // Make sure this services field is in your schema if you're using any of the accounts packages           // 23\n    services: {                                                                                               // 24\n        type: Object,                                                                                         // 25\n        optional: true,                                                                                       // 26\n        blackbox: true,                                                                                       // 27\n        autoform: {                                                                                           // 28\n            type: \"hidden\"                                                                                    // 29\n        }                                                                                                     // 28\n    }                                                                                                         // 24\n});                                                                                                           // 1\nMeteor.users.attachSchema(User);                                                                              // 34\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"methods.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// server/methods.js                                                                                          //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n                                                                                                              //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"publish.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// server/publish.js                                                                                          //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nMeteor.publish('rings', function () {                                                                         // 1\n    return Rings.find({});                                                                                    // 2\n});                                                                                                           // 3\nMeteor.publish('singleRing', function (id) {                                                                  // 5\n    check(id, String);                                                                                        // 6\n    return Rings.find({                                                                                       // 7\n        _id: id                                                                                               // 7\n    });                                                                                                       // 7\n});                                                                                                           // 8\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":[\"meteor/meteor\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// server/main.js                                                                                             //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nvar Meteor = void 0;                                                                                          // 1\nmodule.import('meteor/meteor', {                                                                              // 1\n  \"Meteor\": function (v) {                                                                                    // 1\n    Meteor = v;                                                                                               // 1\n  }                                                                                                           // 1\n}, 0);                                                                                                        // 1\nMeteor.startup(function () {// code to run on server at startup                                               // 3\n});                                                                                                           // 5\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./lib/routes.js\");\nrequire(\"./collections/Rings.js\");\nrequire(\"./collections/Users.js\");\nrequire(\"./server/methods.js\");\nrequire(\"./server/publish.js\");\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/lib/routes.js","/collections/Rings.js","/collections/Users.js","/server/publish.js","/server/main.js"],"names":["Meteor","isClient","Accounts","onLogin","FlowRouter","go","onLogout","triggers","enter","context","redirect","userId","route","name","action","BlazeLayout","render","main","Rings","Mongo","Collection","allow","insert","doc","update","Tags","SimpleSchema","type","String","RingSchema","label","desc","tags","isPrivate","Boolean","defaultValue","optional","autoform","createdBy","autoValue","createdAt","Date","methods","togglePrivate","id","currentState","$set","togglePublic","deleteRing","remove","attachSchema","User","username","emails","Array","Object","regEx","RegEx","Email","services","blackbox","users","publish","find","check","_id","module","import","v","startup"],"mappings":"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","file":"/app.js","sourcesContent":["if(Meteor.isClient){\r\n    Accounts.onLogin(function(){\r\n        FlowRouter.go('dashboard');\r\n    });\r\n\r\n    Accounts.onLogout(function(){\r\n        FlowRouter.go('home');\r\n    });\r\n}\r\n\r\nFlowRouter.triggers.enter([function(context, redirect){\r\n    if(!Meteor.userId()){\r\n        FlowRouter.go('home');\r\n    }\r\n}]);\r\n\r\nFlowRouter.route('/', {\r\n    name: 'home',\r\n    action() {\r\n        if(Meteor.userId()){\r\n            FlowRouter.go('dashboard');\r\n        }\r\n        BlazeLayout.render('HomeLayout');\r\n    }\r\n});\r\n\r\nFlowRouter.route('/dashboard', {\r\n    name: 'dashboard',\r\n    action() {\r\n        BlazeLayout.render('MainLayout', {main:'Dashboard'});\r\n    }\r\n});\r\n\r\n\r\nFlowRouter.route('/rings', {\r\n    name: 'rings',\r\n    action() {\r\n        BlazeLayout.render('MainLayout', {main:'Rings'});\r\n    }\r\n});\r\n\r\nFlowRouter.route('/browse-rings', {\r\n    name: 'browse-rings',\r\n    action() {\r\n        BlazeLayout.render('MainLayout', {main:'BrowseRings'});\r\n    }\r\n});\r\n\r\nFlowRouter.route('/rings/:id', {\r\n    name: 'ring-single',\r\n    action() {\r\n        BlazeLayout.render('MainLayout', {main:'RingSingle'});\r\n    }\r\n});\r\n\r\nFlowRouter.route('/account', {\r\n    name: 'account-settings',\r\n    action() {\r\n        BlazeLayout.render('MainLayout', {main:'AccountSettings'});\r\n    }\r\n});\r\n","Rings = new Mongo.Collection('rings');\r\n\r\nRings.allow({\r\n    insert: function(userId, doc){\r\n        return !!userId;\r\n    },\r\n    update: function(userId, doc) {\r\n        return !!userId;\r\n    }\r\n});\r\n\r\nTags = new SimpleSchema({\r\n    name: {\r\n        type: String\r\n    }\r\n});\r\n\r\nRingSchema = new SimpleSchema({\r\n    name: {\r\n        type: String,\r\n        label: \"Name\"\r\n    },\r\n    desc: {\r\n        type: String,\r\n        label: \"Description\"\r\n    },\r\n    tags: {\r\n        type: [Tags]\r\n    },\r\n    isPrivate: {\r\n        type: Boolean,\r\n        defaultValue: false,\r\n        optional: true,\r\n        autoform:{\r\n            type: \"hidden\"\r\n        }\r\n    },\r\n    createdBy:{\r\n        type: String,\r\n        label: \"Created By\",\r\n        autoValue: function () {\r\n            return this.userId\r\n        },\r\n        autoform: {\r\n            type: \"hidden\"\r\n        }\r\n    },\r\n    createdAt: {\r\n        type: Date,\r\n        label: \"Created At\",\r\n        autoValue: function() {\r\n            return new Date()\r\n        },\r\n        autoform: {\r\n            type: \"hidden\"\r\n        }\r\n    }\r\n});\r\n\r\nMeteor.methods({\r\n    togglePrivate: function(id, currentState) {\r\n        Rings.update(id, {\r\n            $set: {\r\n                isPrivate: true\r\n            }\r\n        });\r\n    },\r\n    togglePublic: function(id, currentState) {\r\n        Rings.update(id, {\r\n            $set: {\r\n                isPrivate: false\r\n            }\r\n        });\r\n    },\r\n    deleteRing: function(id) {\r\n        Rings.remove(id);\r\n    }\r\n});\r\n\r\nRings.attachSchema( RingSchema );\r\n\r\n","User = new SimpleSchema({\r\n    username: {\r\n        type: String,\r\n        // For accounts-password, either emails or username is required, but not both. It is OK to make this\r\n        // optional here because the accounts-password package does its own validation.\r\n        // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\r\n        optional: true\r\n    },\r\n    emails: {\r\n        type: Array,\r\n        // For accounts-password, either emails or username is required, but not both. It is OK to make this\r\n        // optional here because the accounts-password package does its own validation.\r\n        // Third-party login packages may not require either. Adjust this schema as necessary for your usage.\r\n        optional: true\r\n    },\r\n    \"emails.$\": {\r\n        type: Object\r\n    },\r\n    \"emails.$.address\": {\r\n        type: String,\r\n        regEx: SimpleSchema.RegEx.Email\r\n    },\r\n    // Make sure this services field is in your schema if you're using any of the accounts packages\r\n    services: {\r\n        type: Object,\r\n        optional: true,\r\n        blackbox: true,\r\n        autoform: {\r\n            type: \"hidden\"\r\n        }\r\n    },\r\n});\r\n\r\nMeteor.users.attachSchema( User );","Meteor.publish('rings', function(){\r\n    return Rings.find({});\r\n});\r\n\r\nMeteor.publish('singleRing', function(id){\r\n    check(id, String);\r\n    return Rings.find({_id: id});\r\n});","import { Meteor } from 'meteor/meteor';\r\n\r\nMeteor.startup(() => {\r\n  // code to run on server at startup\r\n});\r\n"]}}]